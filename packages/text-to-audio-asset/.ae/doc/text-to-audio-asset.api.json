{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.39.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@jackdbd/text-to-audio-asset!",
  "docComment": "",
  "name": "@jackdbd/text-to-audio-asset",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@jackdbd/text-to-audio-asset!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/text-to-audio-asset!Config:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Config = "
            },
            {
              "kind": "Reference",
              "text": "z.input",
              "canonicalReference": "zod!input:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "text_to_audio_asset_config",
              "canonicalReference": "@jackdbd/text-to-audio-asset!text_to_audio_asset_config:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "Config",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/text-to-audio-asset!text_to_audio_asset_config:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "text_to_audio_asset_config: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    text: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n    synthesis: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n        config: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{}, \"passthrough\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.objectOutputType",
              "canonicalReference": "zod!objectOutputType:type"
            },
            {
              "kind": "Content",
              "text": "<{}, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", \"passthrough\">, "
            },
            {
              "kind": "Reference",
              "text": "z.objectInputType",
              "canonicalReference": "zod!objectInputType:type"
            },
            {
              "kind": "Content",
              "text": "<{}, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", \"passthrough\">>;\n        extension: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n        synthesize: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodFunction",
              "canonicalReference": "zod!ZodFunction:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodTuple",
              "canonicalReference": "zod!ZodTuple:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": "], "
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnknown",
              "canonicalReference": "zod!ZodUnknown:class"
            },
            {
              "kind": "Content",
              "text": ">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodPromise",
              "canonicalReference": "zod!ZodPromise:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnion",
              "canonicalReference": "zod!ZodUnion:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n            error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodType",
              "canonicalReference": "zod!ZodType:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeDef",
              "canonicalReference": "zod!ZodTypeDef:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n            value: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUndefined",
              "canonicalReference": "zod!ZodUndefined:class"
            },
            {
              "kind": "Content",
              "text": ">;\n        }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }, {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n            error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUndefined",
              "canonicalReference": "zod!ZodUndefined:class"
            },
            {
              "kind": "Content",
              "text": ">;\n            value: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodType",
              "canonicalReference": "zod!ZodType:class"
            },
            {
              "kind": "Content",
              "text": "<import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeDef",
              "canonicalReference": "zod!ZodTypeDef:interface"
            },
            {
              "kind": "Content",
              "text": ", import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ">;\n        }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n            value: import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ";\n            error?: undefined;\n        }, {\n            value: import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ";\n            error?: undefined;\n        }>]>>>;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        extension: string;\n        synthesize: (args_0: string, ...args_1: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ";\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    }, {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        extension: string;\n        synthesize: (args_0: string, ...args_1: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ";\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    }>;\n    hosting: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n        config: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{}, \"passthrough\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.objectOutputType",
              "canonicalReference": "zod!objectOutputType:type"
            },
            {
              "kind": "Content",
              "text": "<{}, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", \"passthrough\">, "
            },
            {
              "kind": "Reference",
              "text": "z.objectInputType",
              "canonicalReference": "zod!objectInputType:type"
            },
            {
              "kind": "Content",
              "text": "<{}, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", \"passthrough\">>;\n        write: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodFunction",
              "canonicalReference": "zod!ZodFunction:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodTuple",
              "canonicalReference": "zod!ZodTuple:class"
            },
            {
              "kind": "Content",
              "text": "<[], "
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnknown",
              "canonicalReference": "zod!ZodUnknown:class"
            },
            {
              "kind": "Content",
              "text": ">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodPromise",
              "canonicalReference": "zod!ZodPromise:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnion",
              "canonicalReference": "zod!ZodUnion:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n            error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodType",
              "canonicalReference": "zod!ZodType:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeDef",
              "canonicalReference": "zod!ZodTypeDef:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n            value: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUndefined",
              "canonicalReference": "zod!ZodUndefined:class"
            },
            {
              "kind": "Content",
              "text": ">;\n        }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }, {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n            error: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUndefined",
              "canonicalReference": "zod!ZodUndefined:class"
            },
            {
              "kind": "Content",
              "text": ">;\n            value: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n                href: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n                message: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n            }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n                message: string;\n                href: string;\n            }, {\n                message: string;\n                href: string;\n            }>;\n        }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n            value: {\n                message: string;\n                href: string;\n            };\n            error?: undefined;\n        }, {\n            value: {\n                message: string;\n                href: string;\n            };\n            error?: undefined;\n        }>]>>>;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        write: (...args: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: {\n                message: string;\n                href: string;\n            };\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    }, {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        write: (...args: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: {\n                message: string;\n                href: string;\n            };\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    }>;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    text: string;\n    synthesis: {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        extension: string;\n        synthesize: (args_0: string, ...args_1: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ";\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    };\n    hosting: {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        write: (...args: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: {\n                message: string;\n                href: string;\n            };\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    };\n}, {\n    text: string;\n    synthesis: {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        extension: string;\n        synthesize: (args_0: string, ...args_1: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: import(\"stream\")."
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": ";\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    };\n    hosting: {\n        config: {} & {\n            [k: string]: unknown;\n        };\n        write: (...args: unknown[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n            value: {\n                message: string;\n                href: string;\n            };\n            error?: undefined;\n        } | {\n            error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            value?: undefined;\n        }>;\n    };\n}>"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "text_to_audio_asset_config",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 179
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/text-to-audio-asset!textToAudioAsset:var",
          "docComment": "/**\n * Synthesizes some text into a readable stream representing the speech. Then it generates an audio asset from that speech.\n *\n * @param config - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "textToAudioAsset: "
            },
            {
              "kind": "Content",
              "text": "(config: "
            },
            {
              "kind": "Reference",
              "text": "Config",
              "canonicalReference": "@jackdbd/text-to-audio-asset!Config:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    value?: undefined;\n} | {\n    value: {\n        message: string;\n        href: string;\n    };\n    error?: undefined;\n}>"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "textToAudioAsset",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        }
      ]
    }
  ]
}
