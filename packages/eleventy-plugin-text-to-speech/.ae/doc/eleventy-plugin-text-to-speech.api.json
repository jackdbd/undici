{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.39.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!",
  "docComment": "",
  "name": "@jackdbd/eleventy-plugin-text-to-speech",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!cloud_storage_asset_config:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "cloud_storage_asset_config: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    assetName: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n    buffer: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnion",
              "canonicalReference": "zod!ZodUnion:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodType",
              "canonicalReference": "zod!ZodType:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeDef",
              "canonicalReference": "zod!ZodTypeDef:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ">]>;\n    bucketName: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n    storage: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodType",
              "canonicalReference": "zod!ZodType:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Storage",
              "canonicalReference": "@google-cloud/storage!Storage:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeDef",
              "canonicalReference": "zod!ZodTypeDef:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Storage",
              "canonicalReference": "@google-cloud/storage!Storage:class"
            },
            {
              "kind": "Content",
              "text": ">;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    bucketName: string;\n    assetName: string;\n    buffer: (string | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ") & (string | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined);\n    storage: "
            },
            {
              "kind": "Reference",
              "text": "Storage",
              "canonicalReference": "@google-cloud/storage!Storage:class"
            },
            {
              "kind": "Content",
              "text": ";\n}, {\n    bucketName: string;\n    assetName: string;\n    buffer: (string | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ") & (string | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined);\n    storage: "
            },
            {
              "kind": "Reference",
              "text": "Storage",
              "canonicalReference": "@google-cloud/storage!Storage:class"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "cloud_storage_asset_config",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 41
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!CloudStorageHost:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CloudStorageHost = "
            },
            {
              "kind": "Content",
              "text": "{\n    bucketName: string;\n    keyFilename: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types.ts",
          "releaseTag": "Public",
          "name": "CloudStorageHost",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!collection_name:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "collection_name: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "collection_name",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!DEBUG_PREFIX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEBUG_PREFIX = "
            },
            {
              "kind": "Content",
              "text": "\"11ty-plugin:text-to-speech\""
            }
          ],
          "fileUrlPath": "src/constants.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DEBUG_PREFIX",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!DEFAULT_TRANSFORM_NAME:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_TRANSFORM_NAME = "
            },
            {
              "kind": "Content",
              "text": "\"inject-audio-tags-into-html\""
            }
          ],
          "fileUrlPath": "src/constants.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DEFAULT_TRANSFORM_NAME",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!DEFAULT_VOICE_NAME:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_VOICE_NAME = "
            },
            {
              "kind": "Content",
              "text": "\"en-US-Standard-J\""
            }
          ],
          "fileUrlPath": "src/constants.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DEFAULT_VOICE_NAME",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!defaultAudioInnerHTML:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultAudioInnerHTML: "
            },
            {
              "kind": "Content",
              "text": "(hrefs: string[]) => string"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "defaultAudioInnerHTML",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions:interface",
          "docComment": "/**\n * Options for this Eleventy plugin.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LegacyOptions "
            }
          ],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "Public",
          "name": "LegacyOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#audioEncodings:member",
              "docComment": "/**\n * List of encodings to use when generating audio assets from text matches.\n *\n * See here for the audio encodings supported by the Speech-to-Text API: https://cloud.google.com/speech-to-text/docs/encoding#audio-encodings\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "audioEncodings?: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioEncoding",
                  "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!~AudioEncoding:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "audioEncodings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#cacheExpiration:member",
              "docComment": "/**\n * Expiration for the 11ty AssetCache. https://www.11ty.dev/docs/plugins/fetch/#options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cacheExpiration?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cacheExpiration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#collectionName:member",
              "docComment": "/**\n * Name of the 11ty collection created by this plugin.\n *\n * Note: if you register this plugin more than once, you will need to use a different name every time (otherwise 11ty would throw an Error).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collectionName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collectionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#keyFilename:member",
              "docComment": "/**\n * Absolute filepath to the service account JSON key used to authenticate the Text-to-Speech client library. These credentials might be different from the ones used to authenticate the Cloud Storage client library. If not provided, this plugin will try initializing client libraries using the GOOGLE_APPLICATION_CREDENTIALS environment variable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyFilename?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyFilename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#rules:member",
              "docComment": "/**\n * Rules that determine which texts to convert into speech.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rules: "
                },
                {
                  "kind": "Reference",
                  "text": "Rule",
                  "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!~Rule:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#transformName:member",
              "docComment": "/**\n * Name of the 11ty transform created by this plugin.\n *\n * Note: if you register this plugin more than once, you will need to use a different name every time (11ty would NOT throw an Error, but this plugin will not work as expected).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "transformName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!LegacyOptions#voice:member",
              "docComment": "/**\n * Voice to use when generating audio assets from text matches.\n *\n * See here for the voices supported by the Speech-to-Text API: https://cloud.google.com/text-to-speech/docs/voices\n *\n * Note: different voices might have different prices: https://cloud.google.com/text-to-speech/pricing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "voice?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "voice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!Options:type",
          "docComment": "/**\n * Plugin options.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Options = "
            },
            {
              "kind": "Reference",
              "text": "z.input",
              "canonicalReference": "zod!input:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "options",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!options:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "releaseTag": "Public",
          "name": "Options",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!options:var",
          "docComment": "/**\n * Plugin options schema.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "options: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    audioEncodings: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEffects",
              "canonicalReference": "zod!ZodEffects:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "zod!ZodArray:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnion",
              "canonicalReference": "zod!ZodUnion:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodLiteral",
              "canonicalReference": "zod!ZodLiteral:class"
            },
            {
              "kind": "Content",
              "text": "<\"ALAW\">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodLiteral",
              "canonicalReference": "zod!ZodLiteral:class"
            },
            {
              "kind": "Content",
              "text": "<\"AUDIO_ENCODING_UNSPECIFIED\">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodLiteral",
              "canonicalReference": "zod!ZodLiteral:class"
            },
            {
              "kind": "Content",
              "text": "<\"LINEAR16\">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodLiteral",
              "canonicalReference": "zod!ZodLiteral:class"
            },
            {
              "kind": "Content",
              "text": "<\"MP3\">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodLiteral",
              "canonicalReference": "zod!ZodLiteral:class"
            },
            {
              "kind": "Content",
              "text": "<\"MULAW\">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodLiteral",
              "canonicalReference": "zod!ZodLiteral:class"
            },
            {
              "kind": "Content",
              "text": "<\"OGG_OPUS\">]>, \"many\">, (\"ALAW\" | \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\" | \"MULAW\" | \"OGG_OPUS\")[], (\"ALAW\" | \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\" | \"MULAW\" | \"OGG_OPUS\")[]>>;\n    audioHost: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnion",
              "canonicalReference": "zod!ZodUnion:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n        origin: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n        pathname: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        origin: string;\n        pathname: string;\n    }, {\n        origin: string;\n        pathname: string;\n    }>, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n        bucketName: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ";\n        keyFilename: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        bucketName: string;\n        keyFilename?: string | undefined;\n    }, {\n        bucketName: string;\n        keyFilename?: string | undefined;\n    }>]>;\n    audioInnerHTML: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodFunction",
              "canonicalReference": "zod!ZodFunction:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodTuple",
              "canonicalReference": "zod!ZodTuple:class"
            },
            {
              "kind": "Content",
              "text": "<["
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "zod!ZodArray:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ", \"many\">], "
            },
            {
              "kind": "Reference",
              "text": "z.ZodUnknown",
              "canonicalReference": "zod!ZodUnknown:class"
            },
            {
              "kind": "Content",
              "text": ">, "
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">>;\n    cacheExpiration: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">;\n    collectionName: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">;\n    keyFilename: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodOptional",
              "canonicalReference": "zod!ZodOptional:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">;\n    rules: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "zod!ZodArray:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodObject",
              "canonicalReference": "zod!ZodObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n        regex: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodType",
              "canonicalReference": "zod!ZodType:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeDef",
              "canonicalReference": "zod!ZodTypeDef:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n        cssSelectors: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEffects",
              "canonicalReference": "zod!ZodEffects:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "zod!ZodArray:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ", \"many\">, string[], string[]>>;\n        xPathExpressions: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodEffects",
              "canonicalReference": "zod!ZodEffects:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodArray",
              "canonicalReference": "zod!ZodArray:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ", \"many\">, string[], string[]>>;\n    }, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n        regex: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        cssSelectors: string[];\n        xPathExpressions: string[];\n    }, {\n        regex?: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n        cssSelectors?: string[] | undefined;\n        xPathExpressions?: string[] | undefined;\n    }>, \"many\">>;\n    transformName: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">;\n    voice: "
            },
            {
              "kind": "Reference",
              "text": "z.ZodDefault",
              "canonicalReference": "zod!ZodDefault:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "z.ZodString",
              "canonicalReference": "zod!ZodString:class"
            },
            {
              "kind": "Content",
              "text": ">;\n}, \"strip\", "
            },
            {
              "kind": "Reference",
              "text": "z.ZodTypeAny",
              "canonicalReference": "zod!ZodTypeAny:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    voice: string;\n    audioEncodings: (\"ALAW\" | \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\" | \"MULAW\" | \"OGG_OPUS\")[];\n    cacheExpiration: string;\n    audioHost: ({\n        origin: string;\n        pathname: string;\n    } | {\n        bucketName: string;\n        keyFilename?: string | undefined;\n    }) & ({\n        origin: string;\n        pathname: string;\n    } | {\n        bucketName: string;\n        keyFilename?: string | undefined;\n    } | undefined);\n    collectionName: string;\n    rules: {\n        regex: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        cssSelectors: string[];\n        xPathExpressions: string[];\n    }[];\n    transformName: string;\n    audioInnerHTML?: ((args_0: string[], ...args_1: unknown[]) => string) | undefined;\n    keyFilename?: string | undefined;\n}, {\n    audioHost: ({\n        origin: string;\n        pathname: string;\n    } | {\n        bucketName: string;\n        keyFilename?: string | undefined;\n    }) & ({\n        origin: string;\n        pathname: string;\n    } | {\n        bucketName: string;\n        keyFilename?: string | undefined;\n    } | undefined);\n    audioEncodings?: (\"ALAW\" | \"AUDIO_ENCODING_UNSPECIFIED\" | \"LINEAR16\" | \"MP3\" | \"MULAW\" | \"OGG_OPUS\")[] | undefined;\n    audioInnerHTML?: ((args_0: string[], ...args_1: unknown[]) => string) | undefined;\n    cacheExpiration?: string | undefined;\n    collectionName?: string | undefined;\n    keyFilename?: string | undefined;\n    rules?: {\n        regex?: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n        cssSelectors?: string[] | undefined;\n        xPathExpressions?: string[] | undefined;\n    }[] | undefined;\n    transformName?: string | undefined;\n    voice?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "options",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 121
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!textToSpeechPlugin:var",
          "docComment": "/**\n * Adds Text-to-Speech functionality to an Eleventy site.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "textToSpeechPlugin: "
            },
            {
              "kind": "Content",
              "text": "(eleventyConfig: "
            },
            {
              "kind": "Reference",
              "text": "EleventyConfig",
              "canonicalReference": "!\"\\\"@11ty/eleventy\\\"\".EleventyConfig:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "Options",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!Options:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "textToSpeechPlugin",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!Writer:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Writer = "
            },
            {
              "kind": "Reference",
              "text": "z.infer",
              "canonicalReference": "zod!TypeOf:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "writer",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!~writer:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "releaseTag": "Public",
          "name": "Writer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!WriteResult:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type WriteResult = "
            },
            {
              "kind": "Reference",
              "text": "z.infer",
              "canonicalReference": "zod!TypeOf:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "write_result",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!~write_result:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "releaseTag": "Public",
          "name": "WriteResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!WriteSuccess:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type WriteSuccess = "
            },
            {
              "kind": "Reference",
              "text": "z.infer",
              "canonicalReference": "zod!TypeOf:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "write_success",
              "canonicalReference": "@jackdbd/eleventy-plugin-text-to-speech!~write_success:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "releaseTag": "Public",
          "name": "WriteSuccess",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        }
      ]
    }
  ]
}
