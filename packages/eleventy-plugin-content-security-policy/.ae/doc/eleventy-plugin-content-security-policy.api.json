{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.43.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!",
  "docComment": "",
  "name": "@jackdbd/eleventy-plugin-content-security-policy",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!contentSecurityPolicyPlugin:function(1)",
          "docComment": "/**\n * Plugin configuration function.\n *\n * We give the plugin configuration function a name, so it can be easily spotted in the Eleventy:ErrorHandler debug logs.\n *\n * Hosting providers like Cloudflare Pages and Netlify allow to define custom response headers in a plain text file called _headers. This file must be placed in the publish directory of your site (e.g. usually _site for a Eleventy site).\n *\n * https://developers.cloudflare.com/pages/platform/headers/ https://docs.netlify.com/routing/headers/\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "contentSecurityPolicyPlugin: (eleventyConfig: "
            },
            {
              "kind": "Reference",
              "text": "EleventyConfig",
              "canonicalReference": "!\"\\\"@11ty/eleventy\\\"\".EleventyConfig:interface"
            },
            {
              "kind": "Content",
              "text": ", options: "
            },
            {
              "kind": "Reference",
              "text": "Options",
              "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!Options:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "void"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "eleventyConfig",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "contentSecurityPolicyPlugin"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!DEFAULT_OPTIONS:var",
          "docComment": "/**\n * Default options for the plugin.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_OPTIONS: "
            },
            {
              "kind": "Content",
              "text": "{\n    allowDeprecatedDirectives: boolean;\n    directives: any;\n    excludePatterns: never[];\n    globPatterns: string[];\n    globPatternsDetach: never[];\n    hosting: string | undefined;\n    includePatterns: string[];\n    jsonRecap: boolean;\n    reportOnly: boolean;\n}"
            }
          ],
          "fileUrlPath": "src/constants.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DEFAULT_OPTIONS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!Options:type",
          "docComment": "/**\n * Plugin options.\n *\n * @interface\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Options = "
            },
            {
              "kind": "Reference",
              "text": "z.infer",
              "canonicalReference": "zod!TypeOf:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "options",
              "canonicalReference": "@jackdbd/eleventy-plugin-content-security-policy!~options:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/schemas.ts",
          "releaseTag": "Public",
          "name": "Options",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        }
      ]
    }
  ]
}
